${project.name}

  The dependency reporting plugin provides the capability to transform dependency information, which was generated
  by maven (using the dependency plugin), composer or npm into a common internal format. Different dependency reports
  can be merge into a combined report, which can be rendered using the Velocity Rendering Engine.

* Goals Overview

  The dependency reporting plugin has the following goals:

  *{{{./composer-transform-mojo.html}dependency-reporting:composer-transform}} Reads the dependencies file, which is supposed
  to be generated by a command like <<<composer info --direct --no-dev --locked --latest --ignore-platform-reqs -f json>>>.

  *{{{./java-transform-mojo.html}dependency-reporting:java-transform}} Reads the <<<reportFile>>>, which is supposed to be an xml
  file generated by the <<<versions-maven-plugin>>> with the goal <<<dependency-updates-aggregate-report>>>.
  The report is then transformed into the common format and written as file named <<<outputName>>> in the <<<outputDirectory>>>.

  *{{{./npm-transform-mojo.html}dependency-reporting:npm-transform}} Read the <<<dependenciesFile>>> and the <<<outdatedFile>>>
  and transform the contained information into the common report format, which is written into a file named <<<outputName>>> in
  the <<<outputDirectory>>>. The <<<dependenciesFile>>> should be in JSON format and be generated with the command <<<npm list --prod --json>>>.
  The <<<outdatedFile>>> should also be in JSON format and be generated with the command <<<npm outdated --json --long>>>.

  *{{{./render-mojo.html}dependency-reporting:render}} Renders a combined report from reports which are found in the input directory (including sub-directories).
